# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "oraclelinux/8"
  config.vm.box_url = "https://oracle.github.io/vagrant-projects/boxes/oraclelinux/8.json"

  config.vm.hostname = "mskomol8test01"
#  config.vm.network "public_network", bridge: "enp2s0f0"
#  config.vm.network :private_network, ip: "192.168.121.190"
#  config.vm.network :private_network, :ip => "192.168.122.200"
#  config.vm.network :forwarded_port, guest: 80, host: 8090, host_ip: "0.0.0.0"

  config.vm.network :public_network,
      :dev => "br0",
      :mode => "bridge",
      :type => "bridge",
      :ip => "192.168.50.235"
      
  config.vm.synced_folder ".", "/vagrant",
    # owner: "vagrant", group: "vagrant"
    type: "nfs",
    nfs_version: 4,
    nfs_udp: false

  config.vm.provider :libvirt do |libvirt|
    libvirt.cpus = 4
    libvirt.memory = 2048
    libvirt.nested = true
    # libvirt.cpu_mode = 'host-passthrough'
    # libvirt.disk_bus = 'virtio'
    # libvirt.disk_driver :cache => 'writeback'
    # libvirt.driver = 'kvm'
    # libvirt.nic_model_type = 'virtio'
#    libvirt.storage :file, bus: 'virtio', cache: 'writeback'
#    libvirt.video_type = 'virtio'
  end

  config.vm.provision :ansible do |ansible|
    ansible.verbose = "v"
    ansible.compatibility_mode = "2.0"
#    ansible.extra_vars = { "ansible_python_interpreter" => "/usr/bin/python2" }
    ansible.playbook = "../ansible/playbook.yml"

  config.vm.provision "shell", path: "./provision.sh", run: "once"
  config.vm.provision "shell", path: "./provisionprivx.sh", run: "once"

  config.vm.provision "shell", inline: <<-SHELL
    cat /etc/os-release
    nmcli connection modify 'System eth0' ipv4.never-default true
    nmcli connection modify 'System eth1' ipv4.routes "0.0.0.0/0 192.168.50.250 10"
    nmcli connection modify 'System eth1' ipv4.route-metric 10
    nmcli connection modify 'System eth1' ipv4.gateway "192.168.50.250"
    nmcli c down 'System eth1' && nmcli c up 'System eth1'
    # ip route delete default && ip route replace default via 192.168.50.250 metric 11
    ip a | grep inet
  SHELL

end
end

